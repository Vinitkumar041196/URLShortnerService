// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/metrics/domains/top": {
            "get": {
                "description": "Returns a list of domains shortened maximum number of times",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "List Top Shortened Domains",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "optional query param to specify how many domains to get",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetTopDomainsSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.GetTopDomainsErrorResponse"
                        }
                    }
                }
            }
        },
        "/url/shorten": {
            "post": {
                "description": "Returns a shorten URL for input URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLShortner"
                ],
                "summary": "Shorten URL API",
                "parameters": [
                    {
                        "description": "json with actual url",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ShortenURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.ShortenURLSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ShortenURLErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ShortenURLErrorResponse"
                        }
                    }
                }
            }
        },
        "/{key}": {
            "get": {
                "description": "Redirects the shortened URL to actual URL location",
                "tags": [
                    "URLShortner"
                ],
                "summary": "Redirector API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short url code",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Moved Permanently"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ShortenURLErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.GetTopDomainsErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "http.GetTopDomainsSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "http.ShortenURLErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "http.ShortenURLRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "http.ShortenURLSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "URL SHORTNER",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
